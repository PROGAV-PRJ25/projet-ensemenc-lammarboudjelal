/*
    Repr√©sente le monde du D√©sert Chomp, aride et impitoyable.
    H√©rite de la classe Monde et initialise ses caract√©ristiques propres.
*/
public class DesertChomp : Monde
{
    /*
        Constructeur du monde D√©sert Chomp.
        Initialise les types de sol, plantes disponibles et m√©t√©os typiques.
    */
    public DesertChomp(string unNom = "D√©sert Chomp") : base(unNom)
    {
        // Sol disponible
        this.typesSolsDisponibles.Add(TypeSol.Sableux);

        // Plantes disponibles dans ce monde aride
        this.typesPlantesDisponibles.Add(TypePlante.Cactus);
        this.typesPlantesDisponibles.Add(TypePlante.AloeVera);
        this.typesPlantesDisponibles.Add(TypePlante.PlanteFeu);
        this.typesPlantesDisponibles.Add(TypePlante.Dattier);

        // M√©t√©os typiques du d√©sert
        this.meteosPossibles.Add(new Meteo(38, 95, 5));   // Canicule
        this.meteosPossibles.Add(new Meteo(40, 100, 0));  // Que calor
        this.meteosPossibles.Add(new Meteo(32, 80, 10));  // Chaleur s√®che
        this.meteosPossibles.Add(new Meteo(35, 90, 15));  // Vent chaud
        this.meteosPossibles.Add(new Meteo(30, 50, 30));  // Temp√™te de sable

        this.meteoPrevisionnelle = this.meteosPossibles[0];

        this.InitialiserIllustration();
    }

    /*
        Affiche une description d√©taill√©e du monde D√©sert Chomp.
    */
    public override void AfficherDescription()
    {
        Console.Clear();

        Console.WriteLine("‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê");
        Console.WriteLine($"MONDE 2 ‚Äî {this.nom}");
        Console.WriteLine("‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n");

        Console.WriteLine($"Bienvenue dans le br√ªlant {this.nom} !");
        Console.WriteLine("Seules les plantes les plus r√©sistantes survivent aux crocs du sable...\n");

        Console.WriteLine("Caract√©ristiques du monde :");
        Console.WriteLine("‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ");
        Console.WriteLine("Temp√©rature : entre 30¬∞C et 45¬∞C (chaleur extr√™me)");
        Console.WriteLine("M√©t√©o : temps sec, rares pluies, temp√™tes de sable occasionnelles");
        Console.WriteLine("Plantes cultivables : Cactus üåµ, Alo√© vera ü™¥, Plante feu üî•, Dattier üå¥");

        Console.WriteLine("üêú Nuisibles locaux :");
        Console.WriteLine("   - Chomps des sables : d√©truisent les racines des plantes.");
        Console.WriteLine("   - Scaraboss : scarab√©es destructeurs.");
        Console.WriteLine("   - Temp√™tes de sable : balayent les plantes fragiles.\n");
    }

    /*
        Initialise une illustration ASCII repr√©sentant le D√©sert Chomp.
    */
    public override void InitialiserIllustration()
    {
        this.Illustration  = "            ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£Ä‚†Ä‚†Ä‚†Ä‚£Ä‚†Ä‚†Ä\n";
        this.Illustration += "            ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ô‚†õ‚†õ‚†õ‚†õ‚†∑‚†∂‚†Ä‚£æ‚£ø‚£ø‚£∑‚†à‚†õ‚†â‚†Å‚†Ä\n";
        this.Illustration += "            ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚°¶‚†à‚†õ‚†õ‚¢Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n";
        this.Illustration += "            ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£¥‚†ü‚†Å‚¢Ä‚£æ‚†É‚†Ä‚†π‚£ß‚†Ä‚†Ä‚†Ä‚†Ä\n";
        this.Illustration += "            ‚†Ä‚†Ä‚†Ä‚†à‚°á‚†Ä‚¢∏‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†Å‚†Ä‚†Ä‚£º‚†á‚†Ä‚†Ä‚†Ä‚†ô‚°á‚†Ä‚†Ä‚†Ä\n";
        this.Illustration += "            ‚†Ä‚†Ä‚†Ä‚†Ä‚†ø‚†∂‚¢æ‚£ø‚°á‚†Ä‚¢∏‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n";
        this.Illustration += "            ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚°á‚†Ä‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚¢∏‚°Ü‚£†‚†Ä‚†Ä\n";
        this.Illustration += "            ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£á‚£†‚£ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£º‚°ü‚†ã‚†Ä‚†Ä\n";
        this.Illustration += "            ‚†Ä‚¢Ä‚£Ä‚£Ä‚£Ä‚°Ä‚¢∏‚£ø‚°ø‚†ø‚†õ‚¢Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£º‚£á‚£Ä‚°Ä‚†Ä\n";
        this.Illustration += "            ‚†Ä‚¢∏‚£ø‚£ø‚£ø‚°á‚¢∏‚£ø‚£ß‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä\n";
        this.Illustration += "            ‚†Ä‚¢∏‚£ø‚£ø‚£ø‚°á‚¢∏‚£ø‚£ø‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä\n";
        this.Illustration += "            ‚†Ä‚¢∏‚£ø‚£ø‚£ø‚°á‚¢∏‚£ø‚£ø‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä\n";
        this.Illustration += "            ‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£á‚†ò‚†ø‚†ü‚¢Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä\n";
        this.Illustration += "            ‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä\n";
        this.Illustration += "            ‚†Ä‚†à‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†Å‚†Ä\n";
    }

    /*
        G√®re une urgence sp√©cifique au D√©sert Chomp.
    */
    public override void LancerUrgence(Terrain terrain1, Terrain terrain2)
    {
        int tirage = new Random().Next(3);

        switch (tirage)
        {
            case 0:
                GererChompDesSables(terrain1, terrain2);
                break;
            case 1:
                GererScaraboss(terrain1, terrain2);
                break;
            case 2:
                GererTempeteSable(terrain1, terrain2);
                break;
        }

        Thread.Sleep(2000);
        Console.WriteLine("\nL'urgence est termin√©e. Le soleil tape toujours aussi fort...");
        Simulation.AttendreUtilisateurPourContinuer();
    }

    /*
        G√®re une temp√™te de sable violente.
        Cible uniquement les plantes non adultes.
        Si le joueur √©choue, la plante est d√©racin√©e.
        La temp√™te de sable ne peut d√©raciner qu'une plante par urgence.

        param terrain1 : Premier terrain du joueur.
        param terrain2 : Deuxi√®me terrain du joueur.
    */
    private static void GererTempeteSable(Terrain terrain1, Terrain terrain2)
    {
        GererAttaqueNuisible(
            nomNuisible: "üå™Ô∏è Temp√™te de sable",
            messageIntro: "Une temp√™te de sable se l√®ve √† l‚Äôhorizon... Elle fonce sur votre jardin !",
            terrain1: terrain1,
            terrain2: terrain2,
            conditionCible: plante => plante.Croissance != Croissance.Adulte && plante.Etat == Etat.BonneSante,
            actionCible: (plante, terrain) =>
            {
                Affichage.AfficherAvertissement($"\nLa temp√™te d√©racine la {plante.Symbole} en {plante.Coordonnees} !");

                terrain.RetirerPlantesFilles(plante);
                terrain.Emplacements[plante.Coordonnees.X, plante.Coordonnees.Y] = null;
                terrain.Plantes.Remove(plante);
            },
            options:
            [
                ("D√©ployer une b√¢che de protection", 0.8),
                ("Cr√©er un mur de sable", 0.6),
                ("Enterrer partiellement la plante", 0.7)
            ]
        );
    }

    /*
        G√®re une attaque de Scaraboss (scarab√©e destructeur).
        Le scarab√©e s‚Äôattaque √† une plante non adulte et fragile (taille ‚â§ 2).
        Si le joueur √©choue √† le repousser, la plante est mang√©e.

        param terrain1 : Premier terrain du joueur.
        param terrain2 : Deuxi√®me terrain du joueur.
    */
    private static void GererScaraboss(Terrain terrain1, Terrain terrain2)
    {
        GererAttaqueNuisible(
            nomNuisible: "ü™≤ Scaraboss",
            messageIntro: "Un Scaraboss surgit du sable br√ªlant et fonce vers vos plantations !",
            terrain1: terrain1,
            terrain2: terrain2,
            conditionCible: plante => plante.Etat == Etat.BonneSante && plante.TailleAdulte <= 2 && plante.Croissance != Croissance.Adulte,
            actionCible: (plante, terrain) =>
            {
                Affichage.AfficherAvertissement($"\nLe Scaraboss d√©vore votre jeune {plante.Symbole} en {plante.Coordonnees} !");

                terrain.RetirerPlantesFilles(plante);
                terrain.Emplacements[plante.Coordonnees.X, plante.Coordonnees.Y] = null;
                terrain.Plantes.Remove(plante);
            },
            options:
            [
                ("Cr√©er un mirage avec un miroir", 0.7),
                ("Taper des mains", 0.6),
                ("Secouer du sable en l‚Äôair", 0.8)
            ]
        );
    }

    /*
        G√®re une attaque de Chomp des sables.
        Cible une plante al√©atoire en bonne sant√©, peu importe sa taille.
        Si le joueur √©choue, la plante est d√©truite.

        param terrain1 : Premier terrain du joueur.
        param terrain2 : Deuxi√®me terrain du joueur.
    */
    private static void GererChompDesSables(Terrain terrain1, Terrain terrain2)
    {
        GererAttaqueNuisible(
            nomNuisible: "ü¶¥ Chomp des sables",
            messageIntro: "Un Chomp g√©ant surgit du sol et gronde violemment !",
            terrain1: terrain1,
            terrain2: terrain2,
            conditionCible: plante => plante.Etat == Etat.BonneSante,
            actionCible: (plante, terrain) =>
            {
                Affichage.AfficherAvertissement($"\nLe Chomp des sables d√©vore les racines de votre plante {plante.Symbole} en {plante.Coordonnees} !");

                terrain.RetirerPlantesFilles(plante);
                terrain.Emplacements[plante.Coordonnees.X, plante.Coordonnees.Y] = null;
                terrain.Plantes.Remove(plante);
            },
            options:
            [
                ("Faire vibrer le sol avec des outils", 0.7),
                ("D√©ployer un √©pouvantail g√©ant", 0.6),
                ("Jeter des cailloux sur sa trajectoire", 0.65)
            ]
        );
    }
}