/*
    Repr√©sente le monde de la Plaine Champignon, temp√©r√©, adapt√© aux cultures classiques.
    H√©rite de la classe Monde et initialise ses caract√©ristiques propres.
*/
public class PlaineChampignon : Monde
{
    /*
        Constructeur de la classe Plaine Champignon.
        Initialise le sol, les plantes et les m√©t√©os typiques du monde.
    */
    public PlaineChampignon(string unNom = "Plaine Champignon") : base(unNom)
    {
        // Sol disponible
        this.typesSolsDisponibles.Add(TypeSol.Humifere);

        // Plantes disponibles
        this.typesPlantesDisponibles.Add(TypePlante.Tomate);
        this.typesPlantesDisponibles.Add(TypePlante.Fraise);
        this.typesPlantesDisponibles.Add(TypePlante.Champignon);
        this.typesPlantesDisponibles.Add(TypePlante.Marguerite);

        // M√©t√©os possibles
        this.meteosPossibles.Add(new Meteo(18, 60, 20)); // M√©t√©o douce
        this.meteosPossibles.Add(new Meteo(20, 70, 10)); // Journ√©e ensoleill√©e
        this.meteosPossibles.Add(new Meteo(15, 50, 40)); // Pluie l√©g√®re
        this.meteosPossibles.Add(new Meteo(22, 80, 5));  // Beau temps
        this.meteosPossibles.Add(new Meteo(12, 30, 60)); // Fortes pluies

        this.meteoPrevisionnelle = this.meteosPossibles[0]; // Par d√©faut, la m√©t√©o de d√©part du monde correspond √† la m√©t√©o la plus simple.

        // Initialisation de l'illustration du monde.
        this.InitialiserIllustration();
    }

    /*
        Affiche une description d√©taill√©e du monde Plaine Champignon.
        Liste les caract√©ristiques : temp√©rature, m√©t√©o, plantes et nuisibles sp√©cifiques.
    */
    public override void AfficherDescription()
    {
        Console.Clear();
        
        Console.WriteLine("‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê");
        Console.WriteLine($"MONDE 1 ‚Äî {this.nom}");
        Console.WriteLine("‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n");

        Console.WriteLine($"Bienvenue dans la douce et verdoyante {this.nom} !");
        Console.WriteLine("Ici, tout pousse joyeusement... sauf quand un Goombaver passe par l√† !\n");

        Console.WriteLine("Caract√©ristiques du monde :");
        Console.WriteLine("‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ");
        Console.WriteLine("Temp√©rature id√©ale : entre 10¬∞C et 25¬∞C (climat temp√©r√©)");
        Console.WriteLine("M√©t√©o typique : alternance harmonieuse de pluie et de soleil");
        Console.WriteLine("Plantes cultivables : Tomate üçÖ, Fraise üçì, Marguerite üåº, Champignon üçÑ");
        Console.WriteLine("Nuisibles locaux :");
        Console.WriteLine("   - Goombaver : d√©vore vos plantes s‚Äôil n‚Äôest pas repouss√© √† temps.");
        Console.WriteLine("   - PuceronsKoopa : volent les productions non r√©colt√©es.");
        Console.WriteLine("   - Koopascargot : ralentit la croissance de vos plantes.\n");
    }

    /*
        Initialiser une illustration ASCII repr√©sentant la Plaine Champignon.
    */
    public override void InitialiserIllustration()
    {
        this.Illustration = "                 ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£Ä‚°§‚†§‚¢§‚£Ä‚°Ä\n";
        this.Illustration += "                 ‚†Ä‚†Ä‚†Ä‚¢Ä‚°§‚†ö‚†â‚†ë‚£Ä‚†î‚†ê‚†¢‚†Ä‚†à‚°π‚†∂‚£Ñ\n";
        this.Illustration += "                 ‚†Ä‚†Ä‚°∞‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚°è‚¢Ñ‚£Ä‚°∞‚¢†‚†ä‚†Ä‚†Ä‚†à‚†≥‚°Ñ\n";
        this.Illustration += "                 ‚†Ä‚£∏‚£Ö‚°Ä‚†Ä‚†Ä‚£Ä‚†î‚†Ä‚¢Ä‚°Ä‚†Ä‚†∏‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°Ñ\n";
        this.Illustration += "                 ‚¢Ä‚£ø‚£ø‚£æ‚°≠‚°≠‚†ê‚¢¢‚†ä‚†Å‚†à‚¢£‚†Ä‚†ô‚†¢‚¢Ñ‚£†‚£¥‚£ø‚£∑\n";
        this.Illustration += "                 ‚¢∏‚†Å‚†Ä‚†à‚†π‚£ø‚£∂‚£º‚£Ü‚£Ä‚£Ä‚£º‚£†‚£§‚£æ‚£ø‚†ü‚†â‚†ô‚¢ø\n";
        this.Illustration += "                 ‚†à‚¢ß‚°Ä‚†Ä‚£†‚£ø‚°ø‚†ø‚†ø‚†ø‚†ø‚†ø‚†ø‚†ø‚£ø‚£ø‚°Ä‚†Ä‚£Ä‚†û\n";
        this.Illustration += "                 ‚†Ä‚†Ä‚†à‚†â‚¢©‚†É‚†Ä‚¢Ä‚£§‚†Ä‚†Ä‚¢†‚£¶‚†Ä‚†Ä‚¢∏‚†â‚†â\n";
        this.Illustration += "                 ‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†â‚°Ä‚†Ä‚¢à‚†Å‚†Ä‚†Ä‚¢∏\n";
        this.Illustration += "                 ‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£Ü‚†Ä‚†Ä‚†Ä‚†â‚†Ç‚†Å‚†Ä‚†Ä‚¢Ä‚°º\n";
        this.Illustration += "                ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â\n";
    }

    /*
        G√®re une urgence sp√©cifique √† la Plaine Champignon : Goombaver, Koopascargot, ou PuceronKoopa.
    */
    public override void LancerUrgence(Terrain terrain1, Terrain terrain2)
    {
        int tirage = new Random().Next(3);

        switch (tirage)
        {
            case 0:
                GererGoombaver(terrain1, terrain2);
                break;
            case 1:
                GererKoopascargot(terrain1, terrain2);
                break;
            case 2:
                GererPuceronKoopa(terrain1, terrain2);
                break;
        }

        Thread.Sleep(2000);
        Console.WriteLine("\nL'urgence est termin√©e. Retour √† la culture !\n");
        Simulation.AttendreUtilisateurPourContinuer();
    }

    /*
        Le PuceronKoopa s'attaque √† une plante adulte et d√©truit sa production.
        Le PuceronKoopa ne sort que s‚Äôil y a au moins une plante dont les productions sont r√©coltables.
        Le joueur dispose de 3 tentatives pour repousser l'intrus, sinon la plante perdra ses productions.

        param terrain1 : Premier terrain du joueur.
        param terrain2 : Deuxi√®me terrain du joueur.
    */
    private static void GererPuceronKoopa(Terrain terrain1, Terrain terrain2)
    {
        GererAttaqueNuisible(
            nomNuisible: "üêû PuceronKoopa",
            messageIntro: "Une nu√©e de PuceronsKoopas envahit votre potager !",
            terrain1: terrain1,
            terrain2: terrain2,
            conditionCible: p => p.NbProductionsActuel > 0,
            actionCible: (plante, terrain) =>
            {
                plante.NbProductionsActuel = 0;
                Affichage.AfficherAvertissement($"Les PuceronsKoopas ont d√©truit les r√©coltes de la plante {plante.Symbole} en {plante.Coordonnees} !");
            }
        );
    }

    /*
        Le Koopascargot ralentit la croissance de la plante cibl√©e s‚Äôil n‚Äôest pas repouss√©.
        Le Koopascargot ne sort que s‚Äôil y a au moins une plante en bonne sant√© et non adulte (car ralentir la croissance d'une plante adulte 
        serait un avantage puisqu'elle mourrait moins rapidement), puis cible une plante al√©atoirement.
        Le joueur dispose de 3 tentatives pour repousser l'intrus, sinon la plante cibl√©e aura sa croissance de ralentie de deux semaines.

        param terrain1 : Premier terrain du joueur.
        param terrain2 : Deuxi√®me terrain du joueur.
    */
    private static void GererKoopascargot(Terrain terrain1, Terrain terrain2)
    {
        GererAttaqueNuisible(
            nomNuisible: "üêå Koopascargot",
            messageIntro: "Un bruit visqueux se rapproche... Un Koopascargot rampe vers votre potager !",
            terrain1: terrain1,
            terrain2: terrain2,
            conditionCible: p => p.Etat == Etat.BonneSante && p.Croissance != Croissance.Adulte,
            actionCible: (plante, terrain) =>
            {
                plante.RetarderCroissance();
                Affichage.AfficherAvertissement($"Le Koopascargot a ralenti la croissance de votre plante {plante.Symbole} en {plante.Coordonnees} !");
            }
        );
    }

    /*
        G√®re une attaque de Goombaver sur un des terrains.
        Le Goombaver ne sort que s‚Äôil y a au moins une plante vivante, puis cible une plante al√©atoirement.
        Le joueur dispose de 3 tentatives pour repousser l'intrus, sinon la plante cibl√©e est mang√©e.

        param terrain1 : Premier terrain du joueur.
        param terrain2 : Deuxi√®me terrain du joueur.
    */
    private static void GererGoombaver(Terrain terrain1, Terrain terrain2)
    {
        GererAttaqueNuisible(
            nomNuisible: "üêõ Goombaver",
            messageIntro: "Le sol tremble... Un Goombaver surgit du sous-sol !",
            terrain1: terrain1,
            terrain2: terrain2,
            conditionCible: p => p.Etat != Etat.Morte,
            actionCible: (plante, terrain) =>
            {
                Affichage.AfficherAvertissement($"\nLe Goombaver d√©vore votre plante {plante.Symbole} en {plante.Coordonnees} !");

                terrain.RetirerPlantesFilles(plante);
                terrain.Emplacements[plante.Coordonnees.X, plante.Coordonnees.Y] = null;
                terrain.Plantes.Remove(plante);
            }
        );
    }
}

